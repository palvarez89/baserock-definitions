name: stage2-glibc
kind: chunk

configure-commands:
- mkdir o

# Configure flag notes:
#   1. Avoid installing to PREFIX/lib64 on x86_64.
#   2. Location of linux-api-headers.
#   3. Normal flags. See glibc.morph.
#   4. Force configuration values of certain things that can't be detected
#      in a cross-compile.
- |
  case "$MORPH_ARCH" in
      armv7*)
          ARCH_FLAGS="--without-fp" ;;
  esac

  export CFLAGS="-O2 $CFLAGS"; export CXX=false; \
  cd o && ../configure \
    $ARCH_FLAGS \
    --build=$(../scripts/config.guess) --host=$TARGET_STAGE1 \
    --prefix="$PREFIX" \
    `# [1]` --libdir="$PREFIX/lib" \
    `# [2]` --with-headers="$(pwd)/../../$PREFIX/include" \
    `# [3]` --disable-profile  --enable-kernel=2.6.25 \
    `# [4]` libc_cv_c_cleanup=yes libc_cv_ctors_header=yes \
            libc_cv_forced_unwind=yes libc_cv_ssp=no

build-commands:
- cd o && make localtime=UTC

install-commands:
- cd o && make install_root="$DESTDIR" localtime=UTC install
- sh stage2-glibc-fix-specs

# Install a symlink for the program interpreter (ld.so) so that binaries
# built in stage 3 before the stage 3 glibc is built can use it.
# FIXME: get a better way of finding the name of the loader. The lib64
# path is hardcoded into glibc in the file
# sysdeps/unix/sysv/linux/configure.
- install -d $DESTDIR/lib
- |
  cpu=$(echo $TARGET | cut -d '-' -f 1)
  case "$cpu" in
  x86_64)
    install -d "$DESTDIR/lib64"
    ln -s "$PREFIX/lib/ld-linux-x86-64.so.2" \
          "$DESTDIR/lib64/ld-linux-x86-64.so.2" ;;
  ppc64)
    install -d "$DESTDIR/lib64"
    ln -s "$PREFIX/lib/ld64.so.1" \
          "$DESTDIR/lib64/ld64.so.1" ;;
  *)
    loader=$(basename $(ls "$DESTDIR$PREFIX"/lib/ld-linux*))
    ln -s "$PREFIX/lib/$loader" "$DESTDIR/lib/$loader"
  esac
