#!/bin/sh

# Copyright (C) 2014 Codethink Limited
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

set -e

ROOT="$1"

##########################################################################

ln -s "/etc/systemd/system/openstack-nova-setup.service" \
        "$ROOT/etc/systemd/system/multi-user.target.wants/openstack-nova-setup.service"

##########################################################################
# Enable libvirtd and libvirt-guests services
##########################################################################

wants_dir="$ROOT"/usr/lib/systemd/system/multi-user.target.wants
mkdir -p "$wants_dir"
mkdir -p "$ROOT"/var/lock/subsys
ln -sf ../libvirtd.service "$wants_dir/libvirtd.service"
ln -sf ../libvirt-guests.service "$wants_dir/libvirt-guests.service"

##########################################################################
# Change iprange for the interal libvirt to avoid clashes
# with eth0 ip range
##########################################################################

sed -i "s/192\.168\.122\./192\.168\.1\./g" \
       "$ROOT"/etc/libvirt/qemu/networks/default.xml

##########################################################################
# Check variables
##########################################################################


if [ -z "$IDENTITY_URI" -a \
     -z "$KEYSTONE_INTERNAL_URL" -a \
     -z "$NOVA_SERVICE_USER" -a \
     -z "$NOVA_SERVICE_PASSWORD" -a \
     -z "$NOVA_DB_USER" -a \
     -z "$NOVA_DB_PASSWORD" -a \
     -z "$NOVA_NOVNCPROXY_BASE_URL" -a \
     -z "$NOVA_HOST" -a \
     -z "$NEUTRON_PUBLIC_URL" -a \
     -z "$NEUTRON_SERVICE_USER" -a \
     -z "$NEUTRON_SERVICE_PASSWORD" -a \
     -z "$KEYSTONE_ADMIN_URL" -a \
     -z "$METADATA_PROXY_SHARED_SECRET" -a \
     -z "$RABBITMQ_HOST" -a \
     -z "$RABBITMQ_USER" -a \
     -z "$RABBITMQ_PASSWORD" -a \
     -z "$RABBITMQ_PORT" -a \
     -z "$CONTROLLER_HOST" -a \
     -z "$GLANCE_HOST" -a \
     -z "$KEYSTONE_TEMPORARY_ADMIN_TOKEN" -a \
     -z "$NOVA_PUBLIC_URL" -a \
     -z "$NOVA_INTERNAL_URL" -a \
     -z "$NOVA_ADMIN_URL" -a \
     -z "$NOVA_REGION" ]; then
     # No NOVA options defined, do nothing.
     exit 0
fi

if [ -z "$IDENTITY_URI" -o \
     -z "$KEYSTONE_INTERNAL_URL" -o \
     -z "$NOVA_SERVICE_USER" -o \
     -z "$NOVA_SERVICE_PASSWORD" -o \
     -z "$NOVA_DB_USER" -o \
     -z "$NOVA_DB_PASSWORD" -o \
     -z "$NOVA_NOVNCPROXY_BASE_URL" -o \
     -z "$NOVA_HOST" -o \
     -z "$NEUTRON_PUBLIC_URL" -o \
     -z "$NEUTRON_SERVICE_USER" -o \
     -z "$NEUTRON_SERVICE_PASSWORD" -o \
     -z "$KEYSTONE_ADMIN_URL" -o \
     -z "$METADATA_PROXY_SHARED_SECRET" -o \
     -z "$RABBITMQ_HOST" -o \
     -z "$RABBITMQ_USER" -o \
     -z "$RABBITMQ_PASSWORD" -o \
     -z "$RABBITMQ_PORT" -o \
     -z "$CONTROLLER_HOST" -o \
     -z "$GLANCE_HOST" -o \
     -z "$KEYSTONE_TEMPORARY_ADMIN_TOKEN" -o \
     -z "$NOVA_PUBLIC_URL" -o \
     -z "$NOVA_INTERNAL_URL" -o \
     -z "$NOVA_ADMIN_URL" -o \
     -z "$NOVA_REGION" ]; then
    echo Some options required for Nova were defined, but not all.
    exit 1
fi

##########################################################################
# Generate config variable shell snippet
##########################################################################

OPENSTACK_DATA="$ROOT/etc/openstack"
mkdir -p "$OPENSTACK_DATA"

python <<'EOF' >"$OPENSTACK_DATA/nova.conf"
import os, sys, yaml

nova_configuration={
    'IDENTITY_URI': os.environ['IDENTITY_URI'],
    'KEYSTONE_INTERNAL_URL': os.environ['KEYSTONE_INTERNAL_URL'],
    'NOVA_SERVICE_USER': os.environ['NOVA_SERVICE_USER'],
    'NOVA_SERVICE_PASSWORD': os.environ['NOVA_SERVICE_PASSWORD'],
    'NOVA_DB_USER': os.environ['NOVA_DB_USER'],
    'NOVA_DB_PASSWORD': os.environ['NOVA_DB_PASSWORD'],
    'NOVA_NOVNCPROXY_BASE_URL': os.environ['NOVA_NOVNCPROXY_BASE_URL'],
    'NOVA_HOST': os.environ['NOVA_HOST'],
    'NEUTRON_PUBLIC_URL': os.environ['NEUTRON_PUBLIC_URL'],
    'NEUTRON_SERVICE_USER': os.environ['NEUTRON_SERVICE_USER'],
    'NEUTRON_SERVICE_PASSWORD': os.environ['NEUTRON_SERVICE_PASSWORD'],
    'KEYSTONE_ADMIN_URL': os.environ['KEYSTONE_ADMIN_URL'],
    'METADATA_PROXY_SHARED_SECRET': os.environ['METADATA_PROXY_SHARED_SECRET'],
    'RABBITMQ_HOST': os.environ['RABBITMQ_HOST'],
    'RABBITMQ_USER': os.environ['RABBITMQ_USER'],
    'RABBITMQ_PASSWORD': os.environ['RABBITMQ_PASSWORD'],
    'RABBITMQ_PORT': os.environ['RABBITMQ_PORT'],
    'CONTROLLER_HOST': os.environ['CONTROLLER_HOST'],
    'GLANCE_HOST': os.environ['GLANCE_HOST'],
    'KEYSTONE_TEMPORARY_ADMIN_TOKEN': os.environ['KEYSTONE_TEMPORARY_ADMIN_TOKEN'],
    'NOVA_PUBLIC_URL': os.environ['NOVA_PUBLIC_URL'],
    'NOVA_INTERNAL_URL': os.environ['NOVA_INTERNAL_URL'],
    'NOVA_ADMIN_URL': os.environ['NOVA_ADMIN_URL'],
    'NOVA_REGION': os.environ['NOVA_REGION'],
}

yaml.dump(nova_configuration, sys.stdout, default_flow_style=False)
EOF
